# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore Dependencies
        run: dotnet restore

    - name: Build the application
        run: dotnet build --configuration Release --no-restore

      - name: Start server and run tests concurrently
        run: |
          dotnet run --configuration Release --project ./Warehousing/ &
          echo $! > server.pid
          sleep 10 &

      - name: Run tests
      env:
        ASPNETCORE_URLS: http://localhost:5000
      run: dotnet test --no-build --verbosity normal

      - name: Stop server
        run: kill $(cat server.pid) || true

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy Application
        env:
          FULL_ACCESS_KEY: ${{ secrets.DEFINITLY_NOT_OUR_API_KEY_CARGOHUB_DASHBORD_1 }}
          GET_ACCESS_KEY: ${{ secrets.DEFINITLY_NOT_OUR_API_KEY_CARGOHUB_DASHBORD_2 }}
        run: |
          echo "Deploying application..."
          # Add deployment logic here, such as starting the application
          # or deploying to a cloud service.

#github action page
# github repo
  # Eerst build and daarna test
  # code coverage
  # artifact 
  # deploy
  # auto publish VPS
  
